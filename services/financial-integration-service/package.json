{
  "name": "@service/financial-integration-service",
  "type": "module",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "dev": "NODE_ENV=development wrangler dev src/index.ts --port 3002",
    "deploy": "wrangler deploy --minify src/index.ts --env production",
    "deploy:staging": "wrangler deploy --minify src/index.ts --env staging",
    "clean": "rm -rf .turbo node_modules",
    "lint": "biome check .",
    "format": "biome format --write .",
    "check:types": "tsc --noEmit",
    "import-institutions": "node scripts/importer.js",
    "cleanup": "rm -rf .wrangler && rm -rf .drizzle && rm -rf .drizzle-kit && rm -rf .drizzle-kit-sqlite && rm -rf .drizzle-kit-sqlite-schema",
    "test": "vitest run -c vitest.config.ts",
    "test:integration": "vitest run -c vitest.integration.ts --bail=1",
    "test:benchmark": "vitest run -c vitest.benchmark.ts",
    "debug": "vite --port 5173 --host",
    "test:ci": "vitest run -c vitest.unit.ts --reporter basic",
    "test:watch": "vitest",
    "start-tests": "npm run cleanup && npm run generate && npm run local:migrations:apply && npm run test:watch",
    "build": "tsc",
    "cf-typegen": "wrangler types",
    "generate": "drizzle-kit generate",
    "up": "drizzle-kit up:sqlite",
    "migrate": "drizzle-kit migrate",
    "local:migrations:apply": "wrangler d1 migrations apply engine-db -e local",
    "local:d1:init": "npm run local:migrations:apply && wrangler d1 execute engine-db --file='./migrations/0000_watery_vapor.sql' -e local",
    "migrations:apply-production": "wrangler d1 migrations apply DB --env production --remote",
    "migrations:apply-staging": "wrangler d1 migrations apply DB --env staging --remote",
    "migrations:list-production": "wrangler d1 migrations list DB --env production",
    "migrations:list-staging": "wrangler d1 migrations list DB --env staging",
    "d1:init": "npm run migrations:apply && wrangler d1 execute database --file='./migrations/0000_black_butterfly.sql'",
    "create-queue": "wrangler queue create queue",
    "create-d1-database": "wrangler d1 create engine-production-db",
    "create-namespace-queue-results": "wrangler kv:namespace create QUEUE_RESULTS",
    "create-namespace-kv-namespace": "wrangler kv:namespace create KV_NAMESPACE",
    "create-namespace-r2-bucket": "wrangler r2 bucket create template-service-bucket",
    "typeorm": "typeorm-ts-node-esm",
    "test:connection": "NODE_OPTIONS=\"--loader ts-node/esm\" node --experimental-specifier-resolution=node scripts/test-connection.ts",
    "prisma:migrate": "npx prisma migrate dev",
    "prisma:generate": "npx prisma generate",
    "prisma:studio": "npx prisma studio",
    "prisma:db-pull": "npx prisma db pull",
    "prisma:db-push": "npx prisma db push",
    "prisma:reset": "npx prisma migrate reset --force",
    "prisma:deploy": "npx prisma migrate deploy",
    "prisma:seed": "npx prisma db seed",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:down:volumes": "docker compose down -v",
    "docker:logs": "docker compose logs -f",
    "docker:ps": "docker compose ps",
    "docker:clean": "docker compose down -v --rmi all",
    "dev:docker": "npm run docker:up && npm run prisma:generate && npm run prisma:migrate && npm run dev",
    "dev:fresh": "npm run docker:clean && npm run docker:up && npm run prisma:generate && npm run prisma:migrate && npm run prisma:seed && npm run dev",
    "dev:restart": "npm run docker:down && npm run docker:up && npm run dev",
    "db:reset": "npm run docker:down:volumes && npm run docker:up && npm run prisma:migrate",
    "db:seed": "npm run prisma:seed",
    "db:studio": "npm run prisma:studio",
    "test:docker": "npm run docker:up && npm run prisma:migrate && npm run test",
    "test:integration:docker": "npm run docker:up && npm run prisma:migrate && npm run test:integration"
  },
  "dependencies": {
    "@axiomhq/js": "^1.2.0",
    "@cloudflare/vitest-pool-workers": "^0.4.24",
    "@hono/swagger-ui": "^0.4.1",
    "@hono/zod-openapi": "^0.16.0",
    "@hono/zod-validator": "^0.2.2",
    "@internal/keys": "workspace:*",
    "@prisma/client": "5.21.1",
    "@types/stripe": "^8.0.417",
    "@unkey/api": "^0.26.2",
    "change-case": "^5.4.4",
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.34.1",
    "hono": "^4.6.2",
    "install": "^0.13.0",
    "pg": "^8.13.1",
    "plaid": "^27.0.0",
    "prisma": "^5.21.1",
    "reflect-metadata": "^0.2.2",
    "stripe": "^16.12.0",
    "ts-node": "^10.9.2",
    "typeorm": "^0.3.20",
    "typeorm-model-generator": "^0.4.6",
    "typescript": "^5.6.3",
    "typesense": "^1.8.2",
    "vitest": "1.5.0",
    "xior": "^0.6.1",
    "zod": "^3.23.8"
  },
  "prisma": {
    "schema": "prisma/schema.prisma",
    "seed": "ts-node prisma/seed.ts"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.2",
    "@cloudflare/workers-types": "^4.20240502.0",
    "@types/bun": "^1.1.9",
    "@types/node": "^22.8.1",
    "@types/service-worker-mock": "^2.0.1",
    "@vitest/browser": "^2.1.3",
    "@vitest/ui": "1.5.0",
    "drizzle-kit": "^0.25.0",
    "wrangler": "^3.80.2"
  }
}
